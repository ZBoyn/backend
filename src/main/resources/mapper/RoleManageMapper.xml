<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.zboyn.car.mapper.RoleMapper">
    <resultMap id="RoleResultMap" type="com.neu.zboyn.car.model.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="roleKey" column="role_key" />
        <result property="roleSort" column="role_sort" />
        <result property="dataScope" column="data_scope" />
        <result property="status" column="status" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="remark" column="remark" />
    </resultMap>

    <resultMap id="ShowRoleDtoResultMap" type="com.neu.zboyn.car.dto.ShowRoleDto">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
    </resultMap>

    <select id="selectRoleList" resultMap="RoleResultMap">
        SELECT * FROM role
        <where>
            <if test="roleId != null and roleId != ''">
                AND role_id = #{roleId}
            </if>
            <if test="roleName != null and roleName != ''">
                AND role_name LIKE CONCAT('%', #{roleName}, '%')
            </if>
            <if test="roleKey != null and roleKey != ''">
                AND role_key LIKE CONCAT('%', #{roleKey}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="startTime != null and startTime != ''">
                AND create_time >= #{startTime}
            </if>
            <if test="endTime != null and endTime != ''">
                AND create_time &lt;= #{endTime}
            </if>
        </where>
        ORDER BY role_sort ASC
    </select>

    <select id="selectRoleById" resultMap="RoleResultMap">
        SELECT * FROM role WHERE role_id = #{roleId}
    </select>

    <select id="getRole" resultMap="ShowRoleDtoResultMap">
        SELECT role_id, role_name FROM role;
    </select>

    <select id="getRolesByUserId" resultType="com.neu.zboyn.car.dto.ShowRoleDto">
        SELECT r.role_id AS roleId, r.role_name AS roleName
        FROM role r
                 INNER JOIN user_role ur ON r.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
    </select>

    <insert id="insertRole" parameterType="com.neu.zboyn.car.model.Role">
        INSERT INTO role (role_name, role_key, role_sort, data_scope, status, create_time, update_time, remark)
        VALUES (#{roleName}, #{roleKey}, #{roleSort}, #{dataScope}, #{status}, #{createTime}, #{updateTime}, #{remark})
    </insert>

    <update id="updateRole" parameterType="com.neu.zboyn.car.model.Role">
        UPDATE role
        <set>
            <if test="role.roleName != null">
                role_name = #{role.roleName},
            </if>
            <if test="role.roleKey != null">
                role_key = #{role.roleKey},
            </if>
            <if test="role.roleSort != null">
                role_sort = #{role.roleSort},
            </if>
            <if test="role.dataScope != null">
                data_scope = #{role.dataScope},
            </if>
            <if test="role.status != null">
                status = #{role.status},
            </if>
            <if test="role.updateTime != null">
                update_time = #{role.updateTime},
            </if>
            <if test="role.remark != null">
                remark = #{role.remark},
            </if>
        </set>
        WHERE role_id = #{roleId}
    </update>

    <delete id="deleteRole">
        DELETE FROM role WHERE role_id = #{roleId}
    </delete>

    <update id="changeRoleUser">
        UPDATE user_role
        SET role_id = #{roleId}
        WHERE user_id = #{userId}
    </update>

    <!-- 根据角色ID查找用户 -->
    <select id="getUsersByRoleId" resultType="com.neu.zboyn.car.model.User">
        SELECT u.* FROM user u
        INNER JOIN user_role ur ON u.user_id = ur.user_id
        WHERE ur.role_id = #{roleId}
    </select>

    <!-- 批量插入user_role -->
    <insert id="insertUserRoles">
        INSERT INTO user_role (user_id, role_id)
        VALUES
        <foreach collection="userIds" item="userId" separator=",">
            (#{userId}, #{roleId})
        </foreach>
    </insert>

    <!-- 批量删除user_role -->
    <delete id="deleteUserRoles">
        DELETE FROM user_role
        WHERE role_id = #{roleId}
        AND user_id IN
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <select id="getRoleNamesByUserId" resultType="java.lang.String">
        SELECT r.role_key
        FROM role r
        INNER JOIN user_role ur ON r.role_id = ur.role_id
        WHERE ur.user_id = #{userId}
    </select>
</mapper> 